    roomDesc = [dims[2*k] for k in xrange(len(dims)/2)]
    roomSizes = [dims[2*k+1] for k in xrange(len(dims)/2)]

    revisedArea = roomArea.roomArea(roomDesc, roomSizes)




#-------------------------------------------#
def roomArea(roomDesc, roomSizes):
    room_class = []

    len_roomsize = len(roomSizes)
    revised_area = []
    for k in xrange(len_roomsize):
        if roomDesc[k] != 'S':
            #room_class.append(float(roomSizes[k][2])-float(roomSizes[k][0]))
            #room_class.append(float(roomSizes[k][3])-float(roomSizes[k][1]))
            temp1 = float(roomSizes[k][2] - float(roomSizes[k][0])
            temp2 = float(roomSizes[k][3] - float(roomSizes[k][1])
            revised_area.append(temp1 * temp2)

    area = [room_class[2*k]*room_class[2*k+1] for k in xrange(len_roomsize)]
    revised_area = [area[k] for k in xrange(len(roomDesc)) if roomDesc[k] != 'S']

    return revised_area, room_class


#-------------------------------------------#
#    original
def roomArea(roomDesc, roomSizes):
    room_class = []

    len_roomsize = len(roomSizes)
    for k in xrange(len_roomsize):
        room_class.append(float(roomSizes[k][2])-float(roomSizes[k][0]))
        room_class.append(float(roomSizes[k][3])-float(roomSizes[k][1]))

    area = [room_class[2*k]*room_class[2*k+1] for k in xrange(len_roomsize)]
    revised_area = [area[k] for k in xrange(len(roomDesc)) if roomDesc[k] != 'S']

    return revised_area, room_class
